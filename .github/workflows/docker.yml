name: DockerBuildPush

on:
  push:
    tags:
      - 'v*.*.*-*.*.*.*'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_REPO }}/alpine-s6

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      valid-release: ${{ steps.release-version.outputs.valid-release }}
      alpine-version: ${{ steps.release-version.outputs.alpine-version }}
      s6-version: ${{ steps.release-version.outputs.s6-version }}
    steps:
      - name: Release Version
        id: release-version
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+\-[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            ALPINE_VERSION=$(echo "${{ github.event.ref }}" | sed -r 's/^refs\/tags\/v([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+)-[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/\1/')
            S6_VERSION=$(echo "${{ github.event.ref }}" | sed -r 's/^refs\/tags\/v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+-([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+)$/\1/')

            echo ::set-output name=valid-release::true
            echo ::set-output name=alpine-version::$ALPINE_VERSION
            echo ::set-output name=s6-version::$S6_VERSION

            echo "Valid Release: true"
            echo "Alpine Version: ${ALPINE_VERSION}"
            echo "S6 Version: ${S6_VERSION}"
          else
            echo "Valid Release: false"
            echo "Skipping tag: ${{ github.event.ref }}"
          fi

  docker:
    needs: version
    if: ${{ needs.version.outputs.valid-release }} == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            # Alpine Major
            type=match,pattern=v(\d+)\.\d+\.\d+-\d+\.\d+\.\d+\.\d+,group=1
            # Alpine Major.Minor
            type=match,pattern=v(\d+\.\d+)\.\d+-\d+\.\d+\.\d+\.\d+,group=1
            # Alpine Major.Minor.Patch
            type=match,pattern=v(\d+\.\d+\.\d+)-\d+\.\d+\.\d+\.\d+,group=1
            # Full Version
            type=match,pattern=v(\d+\.\d+\.\d+-\d+\.\d+\.\d+\.\d+),group=1
            type=sha
          flavor: |
            latest: true


      - name: Docker Info, Tags, & Labels
        run: |
          echo "DockerHub Username: ${{ env.DOCKERHUB_USERNAME }}"
          echo "DockerHub Repository: ${{ env.DOCKERHUB_REPO }}"
          echo "Docker Image Tags: ${{ steps.meta.outputs.tags }}"
          echo "Docker Image Labels: ${{ steps.meta.outputs.labels }}"

      - name: Setup Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            ALPINE_VERSION=${{ needs.version.outputs.alpine-version }}
            S6_VERSION=${{ needs.version.outputs.s6-version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}